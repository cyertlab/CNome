/*
 * Macro template to process multiple images in a folder
 */
//You need:

#@ File (label = "Input directory", style = "directory") input
#@ File (label = "DAPI_Output directory", style = "directory") output_DAPI
#@ File (label = "GFP_Output directory", style = "directory") output_GFP
#@ File (label = "Texas_Output directory", style = "directory") output_Texas
#@ File (label = "Data_Output directory", style = "directory") output_Data
#@ File (label = "Spots_Output directory", style = "directory") output_Spots
#@ File (label = "Troubleshoot_Output directory", style = "directory") output_Trouble
#@ String (label = "File suffix", value = ".tif") suffix

processFolder(input);

// function to scan folders/subfolders/files to find files with correct suffix
function processFolder(input) {
	file_list = getFileList(input);

//This is doing the preprocessing(Background sub, blurring, thresholding)
	for (i = 0; i < file_list.length; i++) {
		//Gets you the names of all the files in the big folder
		img_list = getFileList(input+"/"+file_list[i]);
		//Extracts the unique part of file name to name images later
		namelength = lengthOf(file_list[i]);
		suffix = substring(file_list[i], 15, namelength-1); 
		

		//For DAPI
		open(input+"/"+file_list[i]+"/"+img_list[0]);
		run("Subtract Background...", "rolling=50");
		run("Gaussian Blur...", "sigma=3");
		setAutoThreshold("Huang dark");
		run("Convert to Mask");
		run("Watershed");
		saveAs("Tiff", output_DAPI +"/Processed_DAPI_"+ suffix);
		close();
		
		//for GFP
		open(input+"/"+file_list[i]+"/"+img_list[1]);
		run("Subtract Background...", "rolling=100");
		saveAs("Tiff", output_GFP +"/Processed_GFP_"+suffix);
		close();
		
		//for Texas
		open(input+"/"+file_list[i]+"/"+img_list[2]);
		run("Subtract Background...", "rolling=5");
		saveAs("Tiff", output_Texas +"/Processed_Texas_"+suffix);
		close();
	}
	DAPI_list = getFileList(output_DAPI);
	GFP_list = getFileList(output_GFP);
	Texas_list = getFileList(output_Texas);
	//Running this section tells you how much texas red is in the cell and nucleus
	for (i = 0; i < DAPI_list.length; i++) {
		//Get the name for this set of outputs
		suffix = substring(DAPI_list[i], 10);
		//This opens the preprocessed Texas Red and thresholds and makes a mask
		open(output_Texas+"/"+Texas_list[i]); //Open Texas
		Texas_name = getTitle;
		run("Duplicate...", " ");
		run("Gaussian Blur...", "sigma=1");
		setAutoThreshold("Huang dark");
		run("Convert to Mask"); //Open Texas Mask
		Texas_mask_name = getTitle;
		imageCalculator("Multiply create 32-bit", Texas_name, Texas_mask_name);
		Texas_result = getTitle; //Open Texas Result
		close(Texas_name); //Close Texas
		close(Texas_mask_name); //Close Texas mask
		
		//Opens DAPI mask and grabs ROIs
		open(output_DAPI+"/"+DAPI_list[i]); //Open DAPI
		run("Analyze Particles...", "size=500-Infinity show=Outlines display add");
		close();//Closes Drawing
		close("Results"); //Close these blank results
		close(DAPI_list[i]); //Close DAPI

		//Measures total signal
		run("ROI Manager...");
		selectWindow(Texas_result);
		run("Measure"); //Get total signal
		roiManager("Show None");
		roiManager("Show All");
		roiManager("Measure"); // Get signal in each nuclei
		close(Texas_result); //Close texas result

		//This clears the ROI manager
		nROI =roiManager("count"); 
		for (iRow = nROI - 1; iRow >= 0; iRow--){
			roiManager("select", iRow);
			roiManager("Delete");
		saveAs("Results", output_Data +"/nuclear_intensity" + suffix + ".csv");
		close("Results");
		}
		
	}
	
	//This counts puncta in FOV and in nuclei
	for (i = 0; i < Texas_list.length; i++) {
		
		//Grabs name for output files
		suffix = substring(DAPI_list[i], 10); 
		
		//Grab ROIs of nuclei
		open(output_DAPI+"/"+DAPI_list[i]);//Open Dapi
		run("Analyze Particles...", "size=500-Infinity show=Outlines display add");
		close();//close drawing
		close("Results");//close blank results
		close(DAPI_list[i]);//close dapi

		//This finds the maxima and save an image as tiff
		open(output_Texas+"/"+Texas_list[i]);//open Texas red channel
		Texas_name = getTitle();
		run("Find Maxima...", "prominence=4000 strict output=[Single Points]");
		saveAs("Tiff", output_Spots +"/PLA_Points_Image" + suffix);
		Spots_name = getTitle();
		//Measures total number of puncta (x255) so first line should be total signal
		run("Measure");
		
		//Measures puncta per nuclei (x255)
		run("ROI Manager...");
		roiManager("Show None");
		roiManager("Show All");
		roiManager("Measure");
		saveAs("Results", output_Data +"/PLA_Points Results" + suffix+".csv");
		close("Results");
		close(Spots_name);
		close(Texas_name);

		//Resets ROI manager
		nROI =roiManager("count");
		for (iRow = nROI - 1; iRow >= 0; iRow--){
			roiManager("select", iRow);
			roiManager("Delete");
		}
	}
	Spots_list = getFileList(output_Spots);
	//Troubleshooting stuff to make sure everything is working
	//This gives an overlay of puncta and spots called by the program
	for (i = 0; i < Texas_list.length; i++) {
		namelength = lengthOf(file_list[i]);
		suffix = substring(file_list[i], 15, namelength-1); 

		//Converts PLA channel to 8-bit and colors (maybe not needed)
		open(output_Texas+"/"+Texas_list[i]);//Opens the PLA channel
		setOption("ScaleConversions", true);
		run("8-bit");
		run("Yellow");

		//Converts spots channel to 8-bit and colors (maybe not needed)
		open(output_Spots+"/"+Spots_list[i]);//Opens the spots channel
		setOption("ScaleConversions", true);
		run("8-bit");
		run("Cyan");

		//Combines image to stack and converts to composite to save
		run("Images to Stack", "name=Stack title=[] use"); //closes original image
		stack_name = getTitle();
		run("Make Composite", "display=Composite");
		Comp_name = getTitle();
		saveAs("Tiff", output_Trouble +"/Spot-PLA_Overlay" + suffix);
		close(); //close composite image
	}

	//Open DAPI and Texas red and put on nuclei overlay
	for (i = 0; i < file_list.length; i++) {
		//Gets you the names of all the files in the big folder
		img_list = getFileList(input+"/"+file_list[i]);
		//Extracts the unique part of file name to name images later
		namelength = lengthOf(file_list[i]);
		suffix = substring(file_list[i], 15, namelength-1); 

		//Open DAPI and get mask and drawing then make composite with drawing and DAPI
		open(input+"/"+file_list[i]+"/"+img_list[0]);
		Nuclei_name = getTitle();

		//Same DAPI processing as before
		run("Duplicate...", " ");
		run("Subtract Background...", "rolling=50");
		run("Gaussian Blur...", "sigma=3");
		setAutoThreshold("Huang dark");
		run("Convert to Mask");
		run("Watershed");
		Mask_name = getTitle();
		run("Analyze Particles...", "size=500-Infinity show=Outlines display add");
		Drawing_name = getTitle();
		close(Mask_name);

		//Here we convert to 8-bit and make composite
		selectWindow(Nuclei_name);
		setOption("ScaleConversions", true);
		run("8-bit");
		run("Yellow");

		selectWindow(Drawing_name);
		run("Invert");
		setOption("ScaleConversions", true);
		run("8-bit");
		run("Cyan");

		run("Images to Stack", "name=Stack title=[] use keep");
		stack_name = getTitle();
		run("Make Composite", "display=Composite");
		Comp_name = getTitle();

		saveAs("Tiff", output_Trouble +"/DAPI_Overlay"+suffix);
		close();
		close(Nuclei_name);
		
		//Open texas and make overlay with dapi drawing from previous step
		//Open texas channel but no processing because we don't care.
		open(input+"/"+file_list[i]+"/"+img_list[2]);
		Texas_name = getTitle();
		selectWindow(Texas_name);
		setOption("ScaleConversions", true);
		run("8-bit");
		run("Yellow");

		run("Images to Stack", "name=Stack title=[] use keep");
		Texas_stack_name = getTitle();
		run("Make Composite", "display=Composite");
		Texas_Comp_name = getTitle();

		saveAs("Tiff", output_Trouble +"/Texas_Overlay"+suffix);
		//Close everything so it doesn't get confused on the next round.
		close();
		close(Drawing_name);
		close(Texas_Comp_name);
		close(Texas_stack_name);
		close(Texas_name);

		//Also Clear ROI just to be safe
		nROI =roiManager("count");
		for (iRow = nROI - 1; iRow >= 0; iRow--){
			roiManager("select", iRow);
			roiManager("Delete");
		close("Results");
	}

}

